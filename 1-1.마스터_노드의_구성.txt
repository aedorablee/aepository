마스터 노드의 구성

1. kubectl
kubectl은 쿠버네티스 클러스터에 명령을 내리는 역할을 합니다.
다른 구성 요소들과 다르게 바로 실행되는 명령 형태인 바이너리(binary)로 배포되기 때문에 마스터 노드에 있을 필요는 없습니다.
하지만 통상적으로 API 서버와 주로 통신하므로 API서버가 위치한 마스터 노드에 구성되어 있죠.
ex) bastion에서 kubectl 명령어를 통해 클러스터에 명령 전달

2. API 서버
API 서버는 쿠버네티스 클러스터의 중심 역할을 하는 통로입니다. 
주로 상태 값을 저장하는 etcd와 통신하지만, 그 밖의 요소들 또한 API 서버를 중심에 두고 통신하므로 API 서버의 역할이 매우 중요합니다.
회사에 비유하면 모든 직원과 상황을 관리하고 목표를 설정하는 관리자에 해당합니다.
추가) API서버는 6443 port를 사용한다. kubectl을 bastion에서 날릴때도 6443 port를 열어주어야 명령어를 전달할 수 있음

3. etcd
구성 요소들의 상태 값이 모두 저장되는 곳입니다.
회사의 관리자가 모든 보고 내용을 기록하는 노트라고 생각하면 됩니다.
실제로 etcd 외의 다른 구성 요소는 상태 값을 관리하지 않습니다.
그러므로 etcd의 정보만 백업돼 있다면 긴급한 장애 상황에서도 쿠버네티스 클러스터는 복구할 수 있습니다.
또한 etcd는 분산 저장이 가능한 key-value 저장소이므로, 복제해 여러 곳에 저장해 두면 하나의 etcd에서 장애가 나더라도 시스템의 가용성을 확보할 수 있습니다.
** etcd서버의 경우 백업 서버로 생각하고 쿠버네티스 서버가 다운될 경우를 대비하여 쿠버네티스 서버 외부에 etcd 서버를 구성할 수도 있다 **
etcd는 리눅스의 구성 정보를 주로 가지고 있는 etc 디렉토리와 distributed(퍼뜨렸다)의 합성어이다.
따라서 etcd는 구성 정보를 퍼뜨려 저장하겠다는 의미를 가지고 있다.

4. 컨트롤러 매니저
컨트롤러 매니저는 쿠버네티스 클러스터의 오브젝트 상태를 관리합니다.
예를 들어 워커 노드에서 통신이 되지 않는 경우, 상태 체크와 복구는 컨트롤러 매니저에 속한 노드 컨트롤러에서 이루어집니다.
다른 예로 레플리카셋 컨트롤러는 레플리카셋에 요청받은 파드 개수대로 파드를 생성합니다.
뒤에 나오는 서비스와 파드를 연결하는 역할을 하는 엔드포인트 컨트롤러 또한 컨트롤러 매니저입니다.
이와 같이 다양한 상태 값을 관리하는 주체들이 컨트롤러 매니저에 소속돼 각자의 역할을 수행합니다.
** 여기서 나오는 오브젝트는 후에 자세히 다루도록 하겠습니다. **

5. 스케줄러
노드의 상태와 자원, 레이블, 요구 조건 등을 고려해 파드를 어떤 워커 노드에 생성할 것인지를 결정하고 할당합니다.
스케줄러라는 이름에 걸맞게 파드를 조건에 맞는 워커 노드에 지정하고, 파드가 워커 노드에 할당되는 일정을 관리하는 역할을 담당합니다.
